{"version":3,"sources":["components/Header.js","reducers/actions.js","actions/types.js","components/Pagination.js","components/SortButton.js","components/Moviecard.js","reducers/postReducers.js","reducers/index.js","components/store.js","components/SingleMovie.js","App.js","index.js"],"names":["Header","className","to","Component","apiKey","fetchItemsSucces","items","type","payload","fetchItemsFailure","error","getMovie","item","Pagination","getPageNumber","e","props","changePage","target","textContent","this","fetchItems","page","currentPage","role","aria-label","onClick","total","connect","state","posts","pageNumber","dispatch","parseInt","fetch","then","res","json","data","results","catch","SortButton","showMenu","setState","order","isActive","bind","sort","param","clickedId","key","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","compareValues","Moviecard","poster","postItems","map","post","id","poster_path","src","alt","title","release_date","vote_average","Fragment","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","SingleMovie","fetchItem","match","params","original_title","overview","budget","revenue","runtime","href","imdb_id","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1aa4206d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"header\">\r\n                <h1 className=\"title title--big\">Movies - database</h1>\r\n                <div className=\"header__links\"> \r\n                    <Link to=\"/Movietable\">Table view</Link> <Link to=\"/Moviecard\">Card view</Link>\r\n                </div>    \r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import { FETCH_SUCCES, FETCH_FAILURE, CHANGE_PAGE, GET_MOVIE, SORT } from \"../actions/types\";\r\n\r\nconst apiKey = \"api_key=de9d1a4d941ba120c64cd7c510e686b2\";\r\n\r\nconst fetchItems = (page = 1) => dispatch => { \r\n    fetch(`https://api.themoviedb.org/3/movie/now_playing?${apiKey}&language=en-US&page=${page}`) \r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch(fetchItemsSucces(data.results))\r\n    }).catch(error => dispatch(fetchItemsFailure(error)))\r\n  };\r\n\r\nconst fetchItem = (id) => dispatch => {\r\n  fetch(`https://api.themoviedb.org/3/movie/${id}?${apiKey}&language&language=en-US`)\r\n  .then(res => res.json())\r\n  .then(data =>{\r\n    dispatch(getMovie(data))\r\n  }).catch(error => dispatch(fetchItemsFailure(error)))\r\n}\r\n\r\n  const fetchItemsSucces = items => ({\r\n    type: FETCH_SUCCES,\r\n    payload: [...items]\r\n  });\r\n\r\n  const fetchItemsFailure = error => ({\r\n    type: FETCH_FAILURE,\r\n    payload: {error}\r\n  });\r\n\r\n   const changePage = pageNumber => dispatch => {\r\n      dispatch({\r\n        type: CHANGE_PAGE,\r\n        payload: parseInt(pageNumber)\r\n      })\r\n  }\r\n\r\n  const getMovie = item => ({\r\n    type: GET_MOVIE,\r\n    payload: item \r\n  })\r\n\r\n\r\n  const sort = items =>({\r\n    type: SORT,\r\n    payload: [...items]\r\n  })\r\n\r\n\r\n\r\n  export { fetchItems, changePage, fetchItem, sort }\r\n\r\n","// Types of actions  (actions are consts)\r\nexport const FETCH_SUCCES = \"FETCH_SUCCES\";\r\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\r\nexport const CHANGE_PAGE = \"CHANGE_PAGE\";\r\nexport const GET_MOVIE = \"GET_MOVIE\";\r\nexport const SORT = \"SORT\";\r\n\r\n","import React, { Component } from 'react'\r\nimport {changePage, fetchItems} from \"../reducers/actions\"\r\nimport { connect } from 'react-redux';\r\n\r\nclass Pagination extends Component {\r\n\r\n    componentDidMount(){  \r\n        this.props.fetchItems(this.props.page);        \r\n    }\r\n\r\n    getPageNumber = e =>{\r\n        this.props.changePage(e.target.textContent)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.props.fetchItems(this.props.page)\r\n    }\r\n\r\n    render() {\r\n        const total = 20\r\n        const currentPage = this.props.page\r\n            \r\n        return (\r\n            <div>                \r\n                <nav className=\"pagination is-centered is-mobile\" role=\"navigation\" aria-label=\"pagination\">\r\n                    <ul className=\"pagination__list\">\r\n                        {currentPage > 1 ? <li className=\"pagination__number\" onClick={() => this.props.changePage(currentPage - 1)}>-</li> : \"\"}\r\n                        { currentPage > 2 ? <li className=\"pagination__number pagination__number--none\" onClick={this.getPageNumber}>{currentPage - 2}</li> : \"\"}\r\n                        {currentPage > 1 ? <li className=\"pagination__number pagination__number--none\" onClick={this.getPageNumber}>{currentPage - 1}</li> : \"\"}\r\n                        <li className=\"pagination__number pagination__number--active\" onClick={this.getPageNumber}>{currentPage}</li>\r\n                        {currentPage === total ? \"\" : <li className=\"pagination__number pagination__number--none\" onClick={this.getPageNumber}>{currentPage + 1}</li>}\r\n                        { currentPage === total - 1  || currentPage === total ? \"\" : <li className=\"pagination__number pagination__number--none\" onClick={this.getPageNumber}>{currentPage + 2}</li>}\r\n                        {currentPage !== total ? <li className=\"pagination__number\" onClick={() => this.props.changePage(currentPage + 1)}>+</li> : \"\" }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    page: state.posts.page\r\n})\r\n\r\nexport default connect(mapStateToProps, { changePage, fetchItems })(Pagination);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { sort } from \"../reducers/actions\"\r\n\r\nclass SortButton extends Component {\r\n    constructor (){\r\n        super();\r\n\r\n        this.state = {\r\n            showMenu: false,\r\n            order: true,\r\n            isActive: \"\"\r\n        }\r\n\r\n        this.showMenu = this.showMenu.bind(this)\r\n    }\r\n\r\n    showMenu = () =>{\r\n        this.setState({showMenu: !this.state.showMenu})\r\n    }\r\n\r\n    render() {\r\n\r\n        function compareValues(key, order) {\r\n            return function innerSort(a, b) {\r\n              if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                return 0;\r\n              }          \r\n              const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n              const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];          \r\n              let comparison = 0;\r\n              if (varA > varB) {\r\n                comparison = 1;\r\n              } else if (varA < varB) {\r\n                comparison = -1;\r\n              }\r\n              return (\r\n                (order === true) ? (comparison * -1) : comparison\r\n              );\r\n            };\r\n          }  \r\n        \r\n        const sort = (e,param, order) => {\r\n            var clickedId = e.target.textContent;\r\n            this.props.items.sort(compareValues(param, order))\r\n            this.setState({order: !this.state.order, isActive: clickedId})\r\n            this.props.sort(this.props.items)         \r\n         }\r\n\r\n        return (\r\n          <div className=\"sort\" >\r\n            <div className=\"sort__title\" onClick={this.showMenu}>\r\n              SORT\r\n            </div>\r\n            \r\n            {\r\n              this.state.showMenu \r\n                ? (\r\n                  <div className=\"sort__menu\">\r\n                    <div className={this.state.isActive === \"Title ↓↑\" ? \"menu__div--active\" : \"\"} onClick={(e) => sort(e, \"title\", this.state.order)}> <p className=\"menu__text\">Title ↓↑</p> </div>\r\n                    <div className={this.state.isActive === \"Year ↓↑\" ? \"menu__div--active\" : \"\"} onClick={(e) => sort(e, \"release_date\", this.state.order)}> <p className=\"menu__text\">Year ↓↑</p> </div>\r\n                    <div className={this.state.isActive === \"Rating ↓↑\" ? \"menu__div--active\" : \"\"} onClick={(e) => sort(e, \"vote_average\", this.state.order)}> <p className=\"menu__text\">Rating ↓↑</p> </div>\r\n                    <div className={this.state.isActive === \"Popularity ↓↑\" ? \"menu__div--active\" : \"\"} onClick={(e) => sort(e, \"popularity\", this.state.order)}> <p className=\"menu__text\">Popularity ↓↑</p> </div>\r\n                  </div>\r\n                )\r\n                : (\r\n                  null\r\n                )\r\n            }\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    const mapStateToProps = state => {    \r\n        return {\r\n          items: state.posts.items,\r\n          order: state.posts.order\r\n        };\r\n      };\r\n      \r\n    export default connect(mapStateToProps, { sort })(SortButton);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport Pagination from './Pagination';\r\nimport SortButton from './SortButton';\r\n\r\n\r\nclass Moviecard extends Component {\r\n   \r\n\r\n    render() {\r\n        const {poster}=this.props;   \r\n        \r\n                \r\n        const postItems = this.props.items.map(post =>(\r\n                <div className={poster? \"card\" : \"table__row\"} key={post.id} id={post.id}>                \r\n                    {(poster && post.poster_path) && <img className=\"card__img\" src={`http://image.tmdb.org/t/p/w342//${post.poster_path}`} alt=\"Movie poster\"></img>}                 \r\n                    <p className={poster? \"card__text\" : \"table__text table__text--left\"}>{post.title}</p>\r\n                    <p className={poster? \"card__text\" : \"table__text table__text--center\"}>{post.release_date}</p>\r\n                    <p className={poster? \"card__text\" : \"table__text table__text--right\"}>Rating: {post.vote_average}</p>\r\n                    {(poster) && <div className=\"card__link\">\r\n                    <Link to={\"/SingleMovie/\" + post.id}>View Detalis</Link>\r\n                    </div>}\r\n                </div>            \r\n        ));\r\n\r\n        return (\r\n            <React.Fragment>    \r\n                <div className=\"main\">                    \r\n                    <SortButton />\r\n                    <div className=\"contain\">    \r\n                        <div className={poster? \"cardsHolder\" : \"table\"}>\r\n                                {(!poster) && <div className=\"table__row\">                                 \r\n                                                    <p className= \"table__text table__text--big table__text--left\">Title</p>\r\n                                                    <p className=\"table__text table__text--big table__text--center\">Release date</p>\r\n                                                    <p className=\"table__text table__text--big table__text--right\">Rating </p>\r\n                                                </div>}                            \r\n                                {postItems}                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Pagination />      \r\n            </React.Fragment>            \r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {    \r\n    return {\r\n      items: state.posts.items,\r\n      id: state.posts.id,\r\n      page: state.posts.page,\r\n      order: state.posts.order\r\n    };\r\n  };\r\n  \r\nexport default connect(mapStateToProps)(Moviecard);\r\n\r\n","const initialState = {\r\n    items: [],\r\n    item: {},\r\n    page: 1\r\n}\r\n\r\n// function evaluates the type \r\nexport default function(state = initialState, action){\r\n     switch(action.type){\r\n         case \"FETCH_SUCCES\":\r\n             return {...state, items: action.payload}\r\n         case \"FETCH_FAILURE\":\r\n             return {...state, error:action.payload.error}\r\n        case \"CHANGE_PAGE\":\r\n             return {...state, page: action.payload }    \r\n        case \"GET_MOVIE\":\r\n            return {...state, item: action.payload}         \r\n        case \"SORT\":\r\n            return{...state, items: action.payload}        \r\n         default: \r\n            return state\r\n     }\r\n}\r\n\r\n\r\n","import { combineReducers } from 'redux';\r\nimport postReducer from './postReducers';\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    posts: postReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '.././reducers/index';\r\n\r\nconst initalState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initalState,applyMiddleware(...middleware));\r\n\r\nexport default store;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchItem } from '../reducers/actions'\r\nimport {Link} from 'react-router-dom'\r\n\r\n class SingleMovie extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchItem(this.props.match.params.id)\r\n    }\r\n\r\n    render() {       \r\n        const item = this.props.item\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"holder\">\r\n                    <div className=\"movie\">\r\n                        <div className=\"movie__image\">\r\n                            <img src={`http://image.tmdb.org/t/p/w342//${item.poster_path}`} alt=\"Movie poster\"></img>\r\n                        </div>\r\n                        <div className=\"movie__description\">\r\n                            <h1 className=\"title\">{this.props.item.title}</h1>\r\n                            <h4 className=\"subtitle\"><span>Original title:</span> {item.original_title}</h4>\r\n                            <div className=\"table--wide table--left\">\r\n                                <p className=\"table__row table__row--left table__row--initial\"><span className=\"movie__span\">Overview:</span> {item.overview}</p>\r\n                                <p className=\"table__row table__row--left\"><span className=\"movie__span\">Release date:</span> {item.release_date}</p>\r\n                                <p className=\"table__row table__row--left\"><span className=\"movie__span\">Rating:</span> {item.vote_average}</p>\r\n                            </div>\r\n                            <div className=\"movie__misc\">\r\n                                <h4>Additional information </h4>\r\n                                {item.budget > 0 ? <p>Budget: {item.budget} $</p> : \"\" }\r\n                                {item.revenue > 0  ? <p>Revenue: {item.revenue} $</p> : \"\" }\r\n                                <p>Runtime: {item.runtime} min</p>\r\n                                <p>IMDB LINK: <a className=\"misc__link\" href={`https://www.imdb.com/title/${item.imdb_id}`}>https://www.imdb.com/title/{item.imdb_id}</a></p>\r\n                            </div>\r\n                                <Link className=\"movie__link\" to=\"/Moviecard\">BACK</Link>                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    \r\n    return {\r\n      item: state.posts.item,\r\n    };\r\n  };\r\n\r\nexport default connect( mapStateToProps, { fetchItem } )(SingleMovie);\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Route, Redirect} from \"react-router-dom\";\r\nimport Header from './components/Header';\r\nimport Moviecard from './components/Moviecard';\r\nimport store from './components/store';\r\nimport SingleMovie from './components/SingleMovie';\r\n\r\nfunction App() {\r\n  const CardWithPoster = () => {\r\n    return <Moviecard poster />\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Route path=\"/Movietable\" component={Moviecard} />            \r\n          <Route path=\"/Moviecard\" component={CardWithPoster} />\r\n          <Route path=\"/SingleMovie/:id\" component={SingleMovie} />                                     \r\n        </div>\r\n        <Redirect from=\"/\" to=\"Movietable\" />\r\n      </Router>\r\n    </Provider>  \r\n  );\r\n}\r\n\r\nexport default App;\r\n ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}